{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport { ArrowRight } from '@element-plus/icons-vue';\nimport { ref, reactive, onMounted } from 'vue';\nimport Edit from '@/components/editor/Editor.vue';\nimport { ElMessage } from 'element-plus';\n// 图片上传封装组件\nimport Upload from '@/components/upload/Upload.vue';\n// 图片上传封装方法\nimport upload from '@/http/service/upload.js';\nimport axios from 'axios';\nexport default {\n  __name: 'EssayAdd',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const essayAddRef = ref();\n    let options = ref([]);\n    // 表单对象\n    const essayAddForm = reactive({\n      title: '',\n      content: '',\n      category: '',\n      summary: '',\n      cover: '',\n      file: '',\n      isPublish: 0\n    });\n    const getOptions = async () => {\n      const res = await axios.get('/adminapi/category/list');\n      if (res.status !== 201) return ElMessage.error('获取列表失败');\n      options.value = res.data.data;\n    };\n\n    // 富文本编辑框处理事件\n    const handleChange = data => {\n      if (data) return essayAddForm.content = data;\n    };\n\n    // 表单验证规则\n    const essayAddRules = reactive({\n      title: [{\n        required: true,\n        message: '请输入标题',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        message: '不能少于两个字符',\n        trigger: 'blur'\n      }],\n      summary: [{\n        required: true,\n        message: '请输入简要',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: '请选择类别'\n      }]\n    });\n\n    // 图片上传change事件\n    const uploadImg = file => {\n      // 对图片进行处理\n      essayAddForm.cover = URL.createObjectURL(file);\n      essayAddForm.file = file;\n    };\n\n    // 监听提交事件\n    const submitFrom = async () => {\n      console.log(essayAddForm);\n      essayAddRef.value.validate(async valid => {\n        if (!valid) return ElMessage.error('请填写必要表单项');\n        const res = await upload('/adminapi/essay/add', essayAddForm);\n        if (res.status !== 201) return ElMessage.error('添加失败');\n        // 重置\n        essayAddRef.value.resetFields();\n        ElMessage.success('添加成功');\n      });\n    };\n    onMounted(() => {\n      getOptions();\n    });\n    const __returned__ = {\n      essayAddRef,\n      get options() {\n        return options;\n      },\n      set options(v) {\n        options = v;\n      },\n      essayAddForm,\n      getOptions,\n      handleChange,\n      essayAddRules,\n      uploadImg,\n      submitFrom,\n      get ArrowRight() {\n        return ArrowRight;\n      },\n      ref,\n      reactive,\n      onMounted,\n      Edit,\n      get ElMessage() {\n        return ElMessage;\n      },\n      Upload,\n      get upload() {\n        return upload;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ArrowRight","ref","reactive","onMounted","Edit","ElMessage","Upload","upload","axios","essayAddRef","options","essayAddForm","title","content","category","summary","cover","file","isPublish","getOptions","res","get","status","error","value","data","handleChange","essayAddRules","required","message","trigger","min","uploadImg","URL","createObjectURL","submitFrom","console","log","validate","valid","resetFields","success"],"sources":["C:/Users/86191/Desktop/admin/src/views/essay/EssayAdd.vue"],"sourcesContent":["<template>\r\n  <div class=\"news-add\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>文章管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>写文章</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- 表单区域 -->\r\n    <div class=\"form\" style=\"margin-top: 2em;\">\r\n      <el-form ref=\"essayAddRef\" :model=\"essayAddForm\" :rules=\"essayAddRules\" label-width=\"120px\" status-icon>\r\n        <!-- 标题 -->\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"essayAddForm.title\" />\r\n        </el-form-item>\r\n        <!-- 简要 -->\r\n        <el-form-item label=\"简要\" prop=\"summary\">\r\n          <el-input v-model=\"essayAddForm.summary\" :rows=\"3\" type=\"textarea\" />\r\n        </el-form-item>\r\n        <!-- 富文本编辑框 -->\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <Edit @event=\"handleChange\" />\r\n        </el-form-item>\r\n        <!-- 类别 -->\r\n        <el-form-item label=\"类别\" prop=\"category\">\r\n          <el-select v-model=\"essayAddForm.category\" style=\"width: 100%;\" placeholder=\"请选择类别\">\r\n            <el-option v-for=\"item in options\" :key=\"item._id\" :label=\"item.title\" :value=\"item.href\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 封面 -->\r\n        <el-form-item label=\"封面\" prop=\"cover\">\r\n          <Upload :avatar=\"essayAddForm.cover\" @avatarChange=\"uploadImg\" />\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item>\r\n          <el-button @click=\"submitFrom\" type=\"primary\">添加文章</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ArrowRight } from '@element-plus/icons-vue'\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport Edit from '@/components/editor/Editor.vue'\r\nimport { ElMessage } from 'element-plus'\r\n// 图片上传封装组件\r\nimport Upload from '@/components/upload/Upload.vue'\r\n// 图片上传封装方法\r\nimport upload from '@/http/service/upload.js'\r\nimport axios from 'axios';\r\n\r\n\r\nconst essayAddRef = ref();\r\nlet options = ref([]);\r\n// 表单对象\r\nconst essayAddForm = reactive({\r\n  title: '',\r\n  content: '',\r\n  category: '',\r\n  summary: '',\r\n  cover: '',\r\n  file: '',\r\n  isPublish: 0\r\n})\r\n\r\nconst getOptions = async () => {\r\n  const res = await axios.get('/adminapi/category/list');\r\n  if (res.status !== 201) return ElMessage.error('获取列表失败');\r\n  options.value = res.data.data;\r\n}\r\n\r\n// 富文本编辑框处理事件\r\nconst handleChange = (data) => {\r\n  if (data) return essayAddForm.content = data;\r\n}\r\n\r\n\r\n// 表单验证规则\r\nconst essayAddRules = reactive({\r\n  title: [\r\n    {\r\n      required: true,\r\n      message: '请输入标题',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 2,\r\n      message: '不能少于两个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  summary: [\r\n    {\r\n      required: true,\r\n      message: '请输入简要',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  category: [\r\n    {\r\n      required: true,\r\n      message: '请选择类别'\r\n    }\r\n  ]\r\n})\r\n\r\n// 图片上传change事件\r\nconst uploadImg = (file) => {\r\n  // 对图片进行处理\r\n  essayAddForm.cover = URL.createObjectURL(file)\r\n  essayAddForm.file = file\r\n}\r\n\r\n\r\n// 监听提交事件\r\nconst submitFrom = async () => {\r\n  console.log(essayAddForm);\r\n  essayAddRef.value.validate(async (valid) => {\r\n    if (!valid) return ElMessage.error('请填写必要表单项');\r\n    const res = await upload('/adminapi/essay/add', essayAddForm);\r\n    if (res.status !== 201) return ElMessage.error('添加失败');\r\n    // 重置\r\n    essayAddRef.value.resetFields();\r\n    ElMessage.success('添加成功')\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  getOptions();\r\n});\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.form {\r\n  width: 55em;\r\n}\r\n\r\n\r\n// 封面上传样式\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #3d392a;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n/deep/.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #2561af;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n/deep/.avatar-uploader .avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":";AA6CA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,OAAOC,IAAI,MAAM,gCAAgC;AACjD,SAASC,SAAS,QAAQ,cAAc;AACxC;AACA,OAAOC,MAAM,MAAM,gCAAgC;AACnD;AACA,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAGzB,MAAMC,WAAW,GAAGR,GAAG,CAAC,CAAC;IACzB,IAAIS,OAAO,GAAGT,GAAG,CAAC,EAAE,CAAC;IACrB;IACA,MAAMU,YAAY,GAAGT,QAAQ,CAAC;MAC5BU,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,yBAAyB,CAAC;MACtD,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOjB,SAAS,CAACkB,KAAK,CAAC,QAAQ,CAAC;MACxDb,OAAO,CAACc,KAAK,GAAGJ,GAAG,CAACK,IAAI,CAACA,IAAI;IAC/B,CAAC;;IAED;IACA,MAAMC,YAAY,GAAID,IAAI,IAAK;MAC7B,IAAIA,IAAI,EAAE,OAAOd,YAAY,CAACE,OAAO,GAAGY,IAAI;IAC9C,CAAC;;IAGD;IACA,MAAME,aAAa,GAAGzB,QAAQ,CAAC;MAC7BU,KAAK,EAAE,CACL;QACEgB,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,OAAO;QAChBC,OAAO,EAAE;MACX,CAAC,EACD;QACEC,GAAG,EAAE,CAAC;QACNF,OAAO,EAAE,UAAU;QACnBC,OAAO,EAAE;MACX,CAAC,CACF;MACDf,OAAO,EAAE,CACP;QACEa,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,OAAO;QAChBC,OAAO,EAAE;MACX,CAAC,CACF;MACDhB,QAAQ,EAAE,CACR;QACEc,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC,CAAC;;IAEF;IACA,MAAMG,SAAS,GAAIf,IAAI,IAAK;MAC1B;MACAN,YAAY,CAACK,KAAK,GAAGiB,GAAG,CAACC,eAAe,CAACjB,IAAI,CAAC;MAC9CN,YAAY,CAACM,IAAI,GAAGA,IAAI;IAC1B,CAAC;;IAGD;IACA,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BC,OAAO,CAACC,GAAG,CAAC1B,YAAY,CAAC;MACzBF,WAAW,CAACe,KAAK,CAACc,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC1C,IAAI,CAACA,KAAK,EAAE,OAAOlC,SAAS,CAACkB,KAAK,CAAC,UAAU,CAAC;QAC9C,MAAMH,GAAG,GAAG,MAAMb,MAAM,CAAC,qBAAqB,EAAEI,YAAY,CAAC;QAC7D,IAAIS,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOjB,SAAS,CAACkB,KAAK,CAAC,MAAM,CAAC;QACtD;QACAd,WAAW,CAACe,KAAK,CAACgB,WAAW,CAAC,CAAC;QAC/BnC,SAAS,CAACoC,OAAO,CAAC,MAAM,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC;IAEDtC,SAAS,CAAC,MAAM;MACdgB,UAAU,CAAC,CAAC;IACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}