{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport { ArrowRight, Edit } from '@element-plus/icons-vue';\nimport { ref, onMounted, reactive } from 'vue';\nimport axios from 'axios';\n// 图片上传封装方法\nimport upload from '@/http/service/upload.js';\n// 图片上传封装组件\nimport Upload from '@/components/upload/Upload.vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'Focus',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let tableData = ref([]);\n    let focusVisible = ref(false);\n    const focusForm = reactive({\n      title: '',\n      img: '',\n      href: '/home',\n      file: '',\n      _id: ''\n    });\n    let options = ref([]);\n    const getOptions = async () => {\n      const res = await axios.get('/adminapi/category/list');\n      if (res.status !== 201) return ElMessage.error('获取列表失败');\n      options.value = res.data.data;\n    };\n\n    // 图片上传change事件\n    const handleChange = file => {\n      // 对图片进行处理\n      focusForm.img = URL.createObjectURL(file);\n      focusForm.file = file;\n    };\n    const getFocus = async () => {\n      const res = await axios.get('/adminapi/focus');\n      if (res.status !== 201) return ElMessage.error('获取列表失败');\n      tableData.value = res.data.data;\n    };\n    const focusEdit = data => {\n      Object.assign(focusForm, data);\n      focusVisible.value = true;\n      // focusForm.img = data.img;\n    };\n\n    const focusSubmit = async () => {\n      const res = await upload('/adminapi/focus/edit', focusForm);\n      if (res.status !== 201) return ElMessage.error('修改失败');\n      focusVisible.value = false;\n      getFocus();\n      ElMessage.success('修改成功');\n    };\n    const close = () => {\n      focusVisible.value = false;\n      ElMessage.info('已取消');\n    };\n    onMounted(() => {\n      getFocus();\n      getOptions();\n    });\n    const __returned__ = {\n      get tableData() {\n        return tableData;\n      },\n      set tableData(v) {\n        tableData = v;\n      },\n      get focusVisible() {\n        return focusVisible;\n      },\n      set focusVisible(v) {\n        focusVisible = v;\n      },\n      focusForm,\n      get options() {\n        return options;\n      },\n      set options(v) {\n        options = v;\n      },\n      getOptions,\n      handleChange,\n      getFocus,\n      focusEdit,\n      focusSubmit,\n      close,\n      get ArrowRight() {\n        return ArrowRight;\n      },\n      get Edit() {\n        return Edit;\n      },\n      ref,\n      onMounted,\n      reactive,\n      get axios() {\n        return axios;\n      },\n      get upload() {\n        return upload;\n      },\n      Upload,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ArrowRight","Edit","ref","onMounted","reactive","axios","upload","Upload","ElMessage","tableData","focusVisible","focusForm","title","img","href","file","_id","options","getOptions","res","get","status","error","value","data","handleChange","URL","createObjectURL","getFocus","focusEdit","Object","assign","focusSubmit","success","close","info"],"sources":["C:/Users/86191/Desktop/admin/src/views/essay/Focus.vue"],"sourcesContent":["<template>\r\n  <div class=\"focus\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>文章管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>聚焦管理</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <div style=\"margin-top: 2em;\">\r\n      <el-card>\r\n        <el-table :data=\"tableData\" border height=\"700px\">\r\n          <!-- title -->\r\n          <el-table-column prop=\"title\" label=\"title\" />\r\n          <!-- img -->\r\n          <el-table-column prop=\"img\" label=\"背景\" />\r\n          <!-- address -->\r\n          <el-table-column label=\"跳转目录\" prop=\"href\" />\r\n          <!-- 操作 -->\r\n          <el-table-column label=\"操作\">\r\n            <template #default=\"scope\">\r\n              <el-tooltip effect=\"light\" content=\"编辑\" placement=\"bottom\" :enterable=\"false\">\r\n                <el-button circle :icon=\"Edit\" type=\"success\" @click=\"focusEdit(scope.row)\"></el-button>\r\n              </el-tooltip>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </div>\r\n\r\n\r\n    <el-dialog v-model=\"focusVisible\" title=\"编辑聚焦管理\" width=\"50%\">\r\n      <el-form :model=\"focusForm\" status-icon ref=\"editRef\" label-width=\"120px\">\r\n        <!-- title -->\r\n        <el-form-item label=\"title\" prop=\"title\">\r\n          <el-input v-model=\"focusForm.title\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <!-- address -->\r\n        <el-form-item label=\"跳转地址\" prop=\"href\">\r\n          <el-select v-model=\"focusForm.href\" style=\"width: 100%;\">\r\n            <el-option v-for=\"item in options\" :key=\"item._id\" :label=\"item.title\" :value=\"item.href\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- color -->\r\n        <el-form-item label=\"背景\" prop=\"img\">\r\n          <Upload :avatar=\"focusForm.img\" @avatarChange=\"handleChange\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span>\r\n          <el-button @click=\"close\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"focusSubmit\">\r\n            确认修改\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ArrowRight, Edit } from '@element-plus/icons-vue'\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport axios from 'axios'\r\n// 图片上传封装方法\r\nimport upload from '@/http/service/upload.js'\r\n// 图片上传封装组件\r\nimport Upload from '@/components/upload/Upload.vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nlet tableData = ref([]);\r\nlet focusVisible = ref(false);\r\n\r\nconst focusForm = reactive({\r\n  title: '',\r\n  img: '',\r\n  href: '/home',\r\n  file: '',\r\n  _id: ''\r\n})\r\n\r\nlet options = ref([]);\r\n\r\nconst getOptions = async () => {\r\n  const res = await axios.get('/adminapi/category/list');\r\n  if (res.status !== 201) return ElMessage.error('获取列表失败')\r\n  options.value = res.data.data;\r\n}\r\n\r\n// 图片上传change事件\r\nconst handleChange = (file) => {\r\n  // 对图片进行处理\r\n  focusForm.img = URL.createObjectURL(file)\r\n  focusForm.file = file\r\n}\r\n\r\nconst getFocus = async () => {\r\n  const res = await axios.get('/adminapi/focus');\r\n  if (res.status !== 201) return ElMessage.error('获取列表失败');\r\n  tableData.value = res.data.data;\r\n}\r\n\r\nconst focusEdit = (data) => {\r\n  Object.assign(focusForm, data)\r\n  focusVisible.value = true;\r\n  // focusForm.img = data.img;\r\n}\r\n\r\nconst focusSubmit = async () => {\r\n  const res = await upload('/adminapi/focus/edit', focusForm);\r\n  if (res.status !== 201) return ElMessage.error('修改失败');\r\n  focusVisible.value = false;\r\n  getFocus();\r\n  ElMessage.success('修改成功');\r\n}\r\n\r\nconst close = () => {\r\n  focusVisible.value = false\r\n  ElMessage.info('已取消')\r\n}\r\n\r\nonMounted(() => {\r\n  getFocus();\r\n  getOptions();\r\n});\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #3d392a;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n/deep/.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #2561af;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n/deep/.avatar-uploader .avatar {\r\n  width: 200px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":";AA8DA,SAASA,UAAU,EAAEC,IAAI,QAAQ,yBAAyB;AAC1D,SAASC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,MAAM,MAAM,0BAA0B;AAC7C;AACA,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,IAAIC,SAAS,GAAGP,GAAG,CAAC,EAAE,CAAC;IACvB,IAAIQ,YAAY,GAAGR,GAAG,CAAC,KAAK,CAAC;IAE7B,MAAMS,SAAS,GAAGP,QAAQ,CAAC;MACzBQ,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE;IACP,CAAC,CAAC;IAEF,IAAIC,OAAO,GAAGf,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,yBAAyB,CAAC;MACtD,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOb,SAAS,CAACc,KAAK,CAAC,QAAQ,CAAC;MACxDL,OAAO,CAACM,KAAK,GAAGJ,GAAG,CAACK,IAAI,CAACA,IAAI;IAC/B,CAAC;;IAED;IACA,MAAMC,YAAY,GAAIV,IAAI,IAAK;MAC7B;MACAJ,SAAS,CAACE,GAAG,GAAGa,GAAG,CAACC,eAAe,CAACZ,IAAI,CAAC;MACzCJ,SAAS,CAACI,IAAI,GAAGA,IAAI;IACvB,CAAC;IAED,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMT,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iBAAiB,CAAC;MAC9C,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOb,SAAS,CAACc,KAAK,CAAC,QAAQ,CAAC;MACxDb,SAAS,CAACc,KAAK,GAAGJ,GAAG,CAACK,IAAI,CAACA,IAAI;IACjC,CAAC;IAED,MAAMK,SAAS,GAAIL,IAAI,IAAK;MAC1BM,MAAM,CAACC,MAAM,CAACpB,SAAS,EAAEa,IAAI,CAAC;MAC9Bd,YAAY,CAACa,KAAK,GAAG,IAAI;MACzB;IACF,CAAC;;IAED,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMb,GAAG,GAAG,MAAMb,MAAM,CAAC,sBAAsB,EAAEK,SAAS,CAAC;MAC3D,IAAIQ,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOb,SAAS,CAACc,KAAK,CAAC,MAAM,CAAC;MACtDZ,YAAY,CAACa,KAAK,GAAG,KAAK;MAC1BK,QAAQ,CAAC,CAAC;MACVpB,SAAS,CAACyB,OAAO,CAAC,MAAM,CAAC;IAC3B,CAAC;IAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAClBxB,YAAY,CAACa,KAAK,GAAG,KAAK;MAC1Bf,SAAS,CAAC2B,IAAI,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDhC,SAAS,CAAC,MAAM;MACdyB,QAAQ,CAAC,CAAC;MACVV,UAAU,CAAC,CAAC;IACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}