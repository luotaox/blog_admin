{"ast":null,"code":"import { ArrowRight } from '@element-plus/icons-vue';\nimport { ref, reactive } from 'vue';\nimport Edit from '@/components/editor/Editor.vue';\nexport default {\n  __name: 'EssayAdd',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const newsAddRef = ref();\n    // 表单对象\n    const newsAddForm = reactive({\n      title: '',\n      content: '',\n      category: 1,\n      //1 最新发布 2 典型案例 3 通知公告\n      cover: '',\n      file: null,\n      isPublish: 0 //0未发布 1已发布\n    });\n\n    // 富文本编辑框处理事件\n    const handleChange = data => {\n      if (data) return newsAddForm.content = data;\n    };\n\n    // 类别数组\n    const options = [{\n      label: '最新发布',\n      value: 1\n    }, {\n      label: '典型案例',\n      value: 2\n    }, {\n      label: '通知公告',\n      value: 3\n    }];\n\n    // 表单验证规则\n    const newsRules = reactive({\n      title: [{\n        required: true,\n        message: '请输入标题',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        message: '不能少于两个字符',\n        trigger: 'blur'\n      }],\n      content: [{\n        required: true,\n        message: '请输入内容',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: '请选择类别'\n      }],\n      cover: [{\n        required: true,\n        message: '请上传图片',\n        trigger: 'chenge'\n      }]\n    });\n\n    // 监听提交事件\n    const submitFrom = async () => {\n      newsAddRef.value.validate(async valid => {\n        if (!valid) return ElMessage.error('请填写必要表单项');\n        const res = await upload('adminapi/news/add', newsAddForm);\n        if (res.status !== 201) return ElMessage.error('添加失败');\n        // 重置\n        newsAddRef.value.resetFields();\n        ElMessage.success('添加成功');\n      });\n    };\n    const __returned__ = {\n      newsAddRef,\n      newsAddForm,\n      handleChange,\n      options,\n      newsRules,\n      submitFrom,\n      get ArrowRight() {\n        return ArrowRight;\n      },\n      ref,\n      reactive,\n      Edit\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ArrowRight","ref","reactive","Edit","newsAddRef","newsAddForm","title","content","category","cover","file","isPublish","handleChange","data","options","label","value","newsRules","required","message","trigger","min","submitFrom","validate","valid","ElMessage","error","res","upload","status","resetFields","success"],"sources":["C:/Users/86191/Desktop/admin/src/views/essay/EssayAdd.vue"],"sourcesContent":["<template>\r\n  <div class=\"news-add\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>文章管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>写文章</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- 表单区域 -->\r\n    <div class=\"form\" style=\"margin-top: 2em;\">\r\n      <el-form ref=\"newsAddRef\" :model=\"newsAddForm\" :rules=\"newsRules\" label-width=\"120px\" status-icon>\r\n        <!-- 标题 -->\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"newsAddForm.title\" />\r\n        </el-form-item>\r\n        <!-- 简要 -->\r\n        <el-form-item label=\"简要\" prop=\"summary\">\r\n          <el-input v-model=\"newsAddForm.title\" />\r\n        </el-form-item>\r\n        <!-- 富文本编辑框 -->\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <Edit @event=\"handleChange\" />\r\n        </el-form-item>\r\n        <!-- 类别 -->\r\n        <el-form-item label=\"类别\" prop=\"category\">\r\n          <el-select v-model=\"newsAddForm.category\" style=\"width: 100%;\" placeholder=\"请选择类别\">\r\n            <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item>\r\n          <el-button @click=\"submitFrom\" type=\"primary\">添加新闻</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ArrowRight } from '@element-plus/icons-vue'\r\nimport { ref, reactive } from 'vue'\r\nimport Edit from '@/components/editor/Editor.vue'\r\n\r\nconst newsAddRef = ref();\r\n// 表单对象\r\nconst newsAddForm = reactive({\r\n  title: '',\r\n  content: '',\r\n  category: 1, //1 最新发布 2 典型案例 3 通知公告\r\n  cover: '',\r\n  file: null,\r\n  isPublish: 0 //0未发布 1已发布\r\n})\r\n\r\n// 富文本编辑框处理事件\r\nconst handleChange = (data) => {\r\n  if (data) return newsAddForm.content = data;\r\n}\r\n\r\n// 类别数组\r\nconst options = [\r\n  {\r\n    label: '最新发布',\r\n    value: 1\r\n  },\r\n  {\r\n    label: '典型案例',\r\n    value: 2\r\n  },\r\n  {\r\n    label: '通知公告',\r\n    value: 3\r\n  }\r\n]\r\n\r\n// 表单验证规则\r\nconst newsRules = reactive({\r\n  title: [\r\n    {\r\n      required: true,\r\n      message: '请输入标题',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 2,\r\n      message: '不能少于两个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  content: [\r\n    {\r\n      required: true,\r\n      message: '请输入内容',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  category: [\r\n    {\r\n      required: true,\r\n      message: '请选择类别'\r\n    }\r\n  ],\r\n  cover: [\r\n    {\r\n      required: true,\r\n      message: '请上传图片',\r\n      trigger: 'chenge'\r\n    }\r\n  ]\r\n})\r\n\r\n\r\n// 监听提交事件\r\nconst submitFrom = async () => {\r\n  newsAddRef.value.validate(async (valid) => {\r\n    if (!valid) return ElMessage.error('请填写必要表单项');\r\n    const res = await upload('adminapi/news/add', newsAddForm);\r\n    if (res.status !== 201) return ElMessage.error('添加失败');\r\n    // 重置\r\n    newsAddRef.value.resetFields();\r\n    ElMessage.success('添加成功')\r\n  })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.form {\r\n  width: 55em;\r\n}\r\n\r\n\r\n// 封面上传样式\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #3d392a;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n/deep/.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #2561af;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n/deep/.avatar-uploader .avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":"AAyCA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,OAAOC,IAAI,MAAM,gCAAgC;;;;;;;IAEjD,MAAMC,UAAU,GAAGH,GAAG,CAAC,CAAC;IACxB;IACA,MAAMI,WAAW,GAAGH,QAAQ,CAAC;MAC3BI,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,CAAC;MAAE;MACbC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE,CAAC,CAAC;IACf,CAAC,CAAC;;IAEF;IACA,MAAMC,YAAY,GAAIC,IAAI,IAAK;MAC7B,IAAIA,IAAI,EAAE,OAAOR,WAAW,CAACE,OAAO,GAAGM,IAAI;IAC7C,CAAC;;IAED;IACA,MAAMC,OAAO,GAAG,CACd;MACEC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;IACT,CAAC,EACD;MACED,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;IACT,CAAC,EACD;MACED,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;IACT,CAAC,CACF;;IAED;IACA,MAAMC,SAAS,GAAGf,QAAQ,CAAC;MACzBI,KAAK,EAAE,CACL;QACEY,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,OAAO;QAChBC,OAAO,EAAE;MACX,CAAC,EACD;QACEC,GAAG,EAAE,CAAC;QACNF,OAAO,EAAE,UAAU;QACnBC,OAAO,EAAE;MACX,CAAC,CACF;MACDb,OAAO,EAAE,CACP;QACEW,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,OAAO;QAChBC,OAAO,EAAE;MACX,CAAC,CACF;MACDZ,QAAQ,EAAE,CACR;QACEU,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACX,CAAC,CACF;MACDV,KAAK,EAAE,CACL;QACES,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,OAAO;QAChBC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC,CAAC;;IAGF;IACA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BlB,UAAU,CAACY,KAAK,CAACO,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACzC,IAAI,CAACA,KAAK,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC;QAC9C,MAAMC,GAAG,GAAG,MAAMC,MAAM,CAAC,mBAAmB,EAAEvB,WAAW,CAAC;QAC1D,IAAIsB,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOJ,SAAS,CAACC,KAAK,CAAC,MAAM,CAAC;QACtD;QACAtB,UAAU,CAACY,KAAK,CAACc,WAAW,CAAC,CAAC;QAC9BL,SAAS,CAACM,OAAO,CAAC,MAAM,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}