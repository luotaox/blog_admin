{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e613df0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"news-add\"\n};\nconst _hoisted_2 = {\n  class: \"bread\"\n};\nconst _hoisted_3 = {\n  class: \"form\",\n  style: {\n    \"margin-top\": \"2em\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 面包屑区域 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_breadcrumb, {\n    \"separator-icon\": $setup.ArrowRight\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"文章管理\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"写文章\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"separator-icon\"])]), _createCommentVNode(\" 表单区域 \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n    ref: \"essayAddRef\",\n    model: $setup.essayAddForm,\n    rules: $setup.essayAddRules,\n    \"label-width\": \"120px\",\n    \"status-icon\": \"\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 标题 \"), _createVNode(_component_el_form_item, {\n      label: \"标题\",\n      prop: \"title\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.essayAddForm.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.essayAddForm.title = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 简要 \"), _createVNode(_component_el_form_item, {\n      label: \"简要\",\n      prop: \"summary\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.essayAddForm.summary,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.essayAddForm.summary = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 富文本编辑框 \"), _createVNode(_component_el_form_item, {\n      label: \"内容\",\n      prop: \"content\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"Edit\"], {\n        onEvent: $setup.handleChange\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 类别 \"), _createVNode(_component_el_form_item, {\n      label: \"类别\",\n      prop: \"category\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.essayAddForm.category,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.essayAddForm.category = $event),\n        style: {\n          \"width\": \"100%\"\n        },\n        placeholder: \"请选择类别\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item._id,\n            label: item.title,\n            value: item.href\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 按钮区域 \"), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: $setup.submitFrom,\n        type: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"添加文章\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_el_breadcrumb","$setup","ArrowRight","_component_el_breadcrumb_item","_hoisted_3","_component_el_form","ref","model","essayAddForm","rules","essayAddRules","_component_el_form_item","label","prop","_component_el_input","title","$event","summary","onEvent","handleChange","_component_el_select","category","placeholder","_Fragment","_renderList","options","item","_createBlock","_component_el_option","key","_id","value","href","_component_el_button","onClick","submitFrom","type"],"sources":["C:\\Users\\86191\\Desktop\\admin\\src\\views\\essay\\EssayAdd.vue"],"sourcesContent":["<template>\r\n  <div class=\"news-add\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>文章管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>写文章</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- 表单区域 -->\r\n    <div class=\"form\" style=\"margin-top: 2em;\">\r\n      <el-form ref=\"essayAddRef\" :model=\"essayAddForm\" :rules=\"essayAddRules\" label-width=\"120px\" status-icon>\r\n        <!-- 标题 -->\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"essayAddForm.title\" />\r\n        </el-form-item>\r\n        <!-- 简要 -->\r\n        <el-form-item label=\"简要\" prop=\"summary\">\r\n          <el-input v-model=\"essayAddForm.summary\" />\r\n        </el-form-item>\r\n        <!-- 富文本编辑框 -->\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <Edit @event=\"handleChange\" />\r\n        </el-form-item>\r\n        <!-- 类别 -->\r\n        <el-form-item label=\"类别\" prop=\"category\">\r\n          <el-select v-model=\"essayAddForm.category\" style=\"width: 100%;\" placeholder=\"请选择类别\">\r\n            <el-option v-for=\"item in options\" :key=\"item._id\" :label=\"item.title\" :value=\"item.href\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item>\r\n          <el-button @click=\"submitFrom\" type=\"primary\">添加文章</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ArrowRight } from '@element-plus/icons-vue'\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport Edit from '@/components/editor/Editor.vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\n\r\nconst essayAddRef = ref();\r\nlet options = ref([]);\r\n// 表单对象\r\nconst essayAddForm = reactive({\r\n  title: '',\r\n  content: '',\r\n  category: '',\r\n  summary: ''\r\n})\r\n\r\nconst getOptions = async () => {\r\n  const res = await axios.get('/adminapi/category/list');\r\n  if (res.status !== 201) return ElMessage.error('获取列表失败');\r\n  options.value = res.data.data;\r\n}\r\n\r\n// 富文本编辑框处理事件\r\nconst handleChange = (data) => {\r\n  if (data) return newsAddForm.content = data;\r\n}\r\n\r\n\r\n// 表单验证规则\r\nconst essayAddRules = reactive({\r\n  title: [\r\n    {\r\n      required: true,\r\n      message: '请输入标题',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 2,\r\n      message: '不能少于两个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  content: [\r\n    {\r\n      required: true,\r\n      message: '请输入内容',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  category: [\r\n    {\r\n      required: true,\r\n      message: '请选择类别'\r\n    }\r\n  ],\r\n  cover: [\r\n    {\r\n      required: true,\r\n      message: '请上传图片',\r\n      trigger: 'chenge'\r\n    }\r\n  ]\r\n})\r\n\r\n\r\n// 监听提交事件\r\nconst submitFrom = async () => {\r\n  essayAddRef.value.validate(async (valid) => {\r\n    if (!valid) return ElMessage.error('请填写必要表单项');\r\n    const res = await upload('adminapi/news/add', newsAddForm);\r\n    if (res.status !== 201) return ElMessage.error('添加失败');\r\n    // 重置\r\n    essayAddRef.value.resetFields();\r\n    ElMessage.success('添加成功')\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  getOptions();\r\n});\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.form {\r\n  width: 55em;\r\n}\r\n\r\n\r\n// 封面上传样式\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #3d392a;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n/deep/.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #2561af;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n/deep/.avatar-uploader .avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;;EAEdA,KAAK,EAAC;AAAO;;EAQbA,KAAK,EAAC,MAAM;EAACC,KAAwB,EAAxB;IAAA;EAAA;;;;;;;;;;;uBAVpBC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,WAAc,EACdC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAGgBC,wBAAA;IAHA,gBAAc,EAAEC,MAAA,CAAAC;EAAU;sBACxC,MAA6C,CAA7CH,YAAA,CAA6CI,6BAAA;wBAAzB,MAAI,C,iBAAJ,MAAI,E;;QACxBJ,YAAA,CAA4CI,6BAAA;wBAAxB,MAAG,C,iBAAH,KAAG,E;;;;;2CAI3BP,mBAAA,UAAa,EACbC,mBAAA,CAyBM,OAzBNO,UAyBM,GAxBJL,YAAA,CAuBUM,kBAAA;IAvBDC,GAAG,EAAC,aAAa;IAAEC,KAAK,EAAEN,MAAA,CAAAO,YAAY;IAAGC,KAAK,EAAER,MAAA,CAAAS,aAAa;IAAE,aAAW,EAAC,OAAO;IAAC,aAAW,EAAX;;sBAC1F,MAAW,CAAXd,mBAAA,QAAW,EACXG,YAAA,CAEeY,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;wBAC5B,MAAyC,CAAzCd,YAAA,CAAyCe,mBAAA;oBAAtBb,MAAA,CAAAO,YAAY,CAACO,KAAK;mEAAlBd,MAAA,CAAAO,YAAY,CAACO,KAAK,GAAAC,MAAA;;;QAEvCpB,mBAAA,QAAW,EACXG,YAAA,CAEeY,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;wBAC5B,MAA2C,CAA3Cd,YAAA,CAA2Ce,mBAAA;oBAAxBb,MAAA,CAAAO,YAAY,CAACS,OAAO;mEAApBhB,MAAA,CAAAO,YAAY,CAACS,OAAO,GAAAD,MAAA;;;QAEzCpB,mBAAA,YAAe,EACfG,YAAA,CAEeY,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;wBAC5B,MAA8B,CAA9Bd,YAAA,CAA8BE,MAAA;QAAvBiB,OAAK,EAAEjB,MAAA,CAAAkB;MAAY,G;;QAE5BvB,mBAAA,QAAW,EACXG,YAAA,CAIeY,uBAAA;MAJDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;wBAC5B,MAEY,CAFZd,YAAA,CAEYqB,oBAAA;oBAFQnB,MAAA,CAAAO,YAAY,CAACa,QAAQ;mEAArBpB,MAAA,CAAAO,YAAY,CAACa,QAAQ,GAAAL,MAAA;QAAEvB,KAAoB,EAApB;UAAA;QAAA,CAAoB;QAAC6B,WAAW,EAAC;;0BAC/D,MAAuB,E,kBAAlC5B,mBAAA,CAA4F6B,SAAA,QAAAC,WAAA,CAAlEvB,MAAA,CAAAwB,OAAO,EAAfC,IAAI;+BAAtBC,YAAA,CAA4FC,oBAAA;YAAxDC,GAAG,EAAEH,IAAI,CAACI,GAAG;YAAGlB,KAAK,EAAEc,IAAI,CAACX,KAAK;YAAGgB,KAAK,EAAEL,IAAI,CAACM;;;;;;;QAGxFpC,mBAAA,UAAa,EACbG,YAAA,CAEeY,uBAAA;wBADb,MAA8D,CAA9DZ,YAAA,CAA8DkC,oBAAA;QAAlDC,OAAK,EAAEjC,MAAA,CAAAkC,UAAU;QAAEC,IAAI,EAAC;;0BAAU,MAAI,C,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}