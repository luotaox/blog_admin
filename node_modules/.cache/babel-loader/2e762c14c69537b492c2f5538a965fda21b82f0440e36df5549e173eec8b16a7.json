{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { unref as _unref, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, isRef as _isRef, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-44602306\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"news-list\"\n};\nconst _hoisted_2 = {\n  class: \"bread\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"margin-top\": \"2em\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"dialog\"\n};\nconst _hoisted_5 = {\n  style: {\n    \"font-size\": \"28px\"\n  }\n};\nconst _hoisted_6 = {\n  style: {\n    \"font-size\": \"13px\",\n    \"margin-top\": \"1em\"\n  }\n};\nconst _hoisted_7 = [\"innerHTML\"];\nimport { ArrowRight, Edit, Star, Delete, StarFilled } from '@element-plus/icons-vue';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport formatTime from '@/util/formantTime';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'NewsList',\n  setup(__props) {\n    const router = useRouter();\n    const tableData = ref([]);\n    // 预览数据\n    const previewList = ref({});\n    // 新闻预览对话框可见\n    let previewVisible = ref(false);\n    onMounted(() => {\n      getTableData();\n    });\n\n    // 获取新闻数据\n    const getTableData = async () => {\n      const res = await axios.get(`//8.130.52.196:3000/adminapi/news/list`);\n      if (res.status !== 201) return ElMessage.error('获取新闻列表失败');\n      tableData.value = res.data.data;\n    };\n\n    // 格式化分类数据\n    const categoryFormat = category => {\n      const Arr = ['最新发布', '典型案例', '通知公告'];\n      return Arr[category - 1];\n    };\n\n    // 发布关闭新闻\n    const hanldSwitchChange = async data => {\n      const res = await axios.put(`//8.130.52.196:3000/adminapi/news/publish/`, {\n        _id: data._id,\n        isPublish: data.isPublish\n      });\n      if (res.status !== 201) return ElMessage.error('修改失败');\n      ElMessage.success('修改成功');\n    };\n\n    // 监听预览事件\n    const hanldPreview = data => {\n      previewList.value = data;\n      previewVisible.value = true;\n    };\n\n    // 删除新闻\n    const delNews = async data => {\n      ElMessageBox.confirm('是否删除?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '否',\n        type: 'warning'\n      }).then(async () => {\n        const res = await axios.delete(`//8.130.52.196:3000/adminapi/news/list/${data._id}`);\n        if (res.status !== 201) return ElMessage.error('删除失败');\n        ElMessage({\n          type: 'success',\n          message: '删除成功'\n        });\n        getTableData();\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    };\n\n    // 编辑新闻\n    const editNews = data => {\n      router.push(`/editnews/${data._id}`);\n    };\n    return (_ctx, _cache) => {\n      const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n      const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n      const _component_el_switch = _resolveComponent(\"el-switch\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n      const _component_el_table = _resolveComponent(\"el-table\");\n      const _component_el_card = _resolveComponent(\"el-card\");\n      const _component_el_icon = _resolveComponent(\"el-icon\");\n      const _component_el_divider = _resolveComponent(\"el-divider\");\n      const _component_el_dialog = _resolveComponent(\"el-dialog\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_breadcrumb, {\n        \"separator-icon\": _unref(ArrowRight)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, null, {\n          default: _withCtx(() => [_createTextVNode(\"新闻管理\")]),\n          _: 1\n        }), _createVNode(_component_el_breadcrumb_item, null, {\n          default: _withCtx(() => [_createTextVNode(\"新闻列表\")]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"separator-icon\"])]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_card, null, {\n        default: _withCtx(() => [_createVNode(_component_el_table, {\n          data: tableData.value,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"title\",\n            label: \"标题\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"分类\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(categoryFormat(scope.row.category)), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"修改时间\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString(_unref(formatTime).getTime(scope.row.editTime)), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"是否发布\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_switch, {\n              modelValue: scope.row.isPublish,\n              \"onUpdate:modelValue\": $event => scope.row.isPublish = $event,\n              \"active-value\": 1,\n              \"inactive-value\": 0,\n              onChange: $event => hanldSwitchChange(scope.row)\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tooltip, {\n              effect: \"light\",\n              content: \"预览\",\n              placement: \"bottom\",\n              enterable: false\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"success\",\n                icon: _unref(Star),\n                circle: \"\",\n                onClick: $event => hanldPreview(scope.row)\n              }, null, 8, [\"icon\", \"onClick\"])]),\n              _: 2\n            }, 1024), _createVNode(_component_el_tooltip, {\n              effect: \"light\",\n              content: \"编辑\",\n              placement: \"bottom\",\n              enterable: false\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"primary\",\n                icon: _unref(Edit),\n                circle: \"\",\n                onClick: $event => editNews(scope.row)\n              }, null, 8, [\"icon\", \"onClick\"])]),\n              _: 2\n            }, 1024), _createVNode(_component_el_tooltip, {\n              effect: \"light\",\n              content: \"删除\",\n              placement: \"bottom\",\n              enterable: false\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"danger\",\n                icon: _unref(Delete),\n                circle: \"\",\n                onClick: $event => delNews(scope.row)\n              }, null, 8, [\"icon\", \"onClick\"])]),\n              _: 2\n            }, 1024)]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"data\"])]),\n        _: 1\n      })]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_dialog, {\n        modelValue: _unref(previewVisible),\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _isRef(previewVisible) ? previewVisible.value = $event : previewVisible = $event),\n        title: \"新闻预览\",\n        width: \"50%\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"h2\", _hoisted_5, _toDisplayString(previewList.value.title), 1), _createElementVNode(\"p\", _hoisted_6, \"编辑时间:  \" + _toDisplayString(_unref(formatTime).getTime(previewList.value.editTime)), 1), _createVNode(_component_el_divider, null, {\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_unref(StarFilled))]),\n            _: 1\n          })]),\n          _: 1\n        }), _createElementVNode(\"div\", {\n          class: \"content\",\n          innerHTML: previewList.value.content\n        }, null, 8, _hoisted_7)]),\n        _: 1\n      }, 8, [\"modelValue\"])])]);\n    };\n  }\n};","map":{"version":3,"names":["ArrowRight","Edit","Star","Delete","StarFilled","ref","onMounted","axios","formatTime","useRouter","router","tableData","previewList","previewVisible","getTableData","res","get","status","ElMessage","error","value","data","categoryFormat","category","Arr","hanldSwitchChange","put","_id","isPublish","success","hanldPreview","delNews","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","delete","message","catch","editNews","push"],"sources":["D:/0/综合练习/全栈项目/news/前端/后台/admin/src/views/news/NewsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"news-list\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>新闻管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>新闻列表</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- table表格区域 -->\r\n    <div style=\"margin-top: 2em;\">\r\n      <el-card>\r\n        <el-table :data=\"tableData\" border>\r\n          <!-- 名称 -->\r\n          <el-table-column prop=\"title\" label=\"标题\" />\r\n          <!-- 分类 -->\r\n          <el-table-column label=\"分类\">\r\n            <template #default=\"scope\">\r\n              {{ categoryFormat(scope.row.category) }}\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 修改时间 -->\r\n          <el-table-column label=\"修改时间\">\r\n            <template #default=\"scope\">\r\n              {{ formatTime.getTime(scope.row.editTime) }}\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 是否发布 -->\r\n          <el-table-column label=\"是否发布\">\r\n            <template #default=\"scope\">\r\n              <el-switch v-model=\"scope.row.isPublish\" :active-value=\"1\" :inactive-value=\"0\"\r\n                @change=\"hanldSwitchChange(scope.row)\"></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 操作 -->\r\n          <el-table-column label=\"操作\">\r\n            <template #default=\"scope\">\r\n              <el-tooltip effect=\"light\" content=\"预览\" placement=\"bottom\" :enterable=\"false\">\r\n                <el-button type=\"success\" :icon=\"Star\" circle @click=\"hanldPreview(scope.row)\" />\r\n              </el-tooltip>\r\n              <el-tooltip effect=\"light\" content=\"编辑\" placement=\"bottom\" :enterable=\"false\">\r\n                <el-button type=\"primary\" :icon=\"Edit\" circle @click=\"editNews(scope.row)\" />\r\n              </el-tooltip>\r\n              <el-tooltip effect=\"light\" content=\"删除\" placement=\"bottom\" :enterable=\"false\">\r\n                <el-button type=\"danger\" :icon=\"Delete\" circle @click=\"delNews(scope.row)\" />\r\n              </el-tooltip>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </div>\r\n\r\n\r\n    <!-- 预览对话框 -->\r\n    <div class=\"dialog\">\r\n      <el-dialog v-model=\"previewVisible\" title=\"新闻预览\" width=\"50%\">\r\n        <h2 style=\"font-size: 28px;\">{{ previewList.title }}</h2>\r\n        <p style=\"font-size: 13px; margin-top: 1em;\">编辑时间: &nbsp;{{ formatTime.getTime(previewList.editTime) }} </p>\r\n        <!-- 分割线 -->\r\n        <el-divider>\r\n          <el-icon><star-filled /></el-icon>\r\n        </el-divider>\r\n        <div class=\"content\" v-html=\"previewList.content\" />\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ArrowRight, Edit, Star, Delete, StarFilled } from '@element-plus/icons-vue'\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\nimport formatTime from '@/util/formantTime'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst router = useRouter();\r\nconst tableData = ref([]);\r\n// 预览数据\r\nconst previewList = ref({})\r\n// 新闻预览对话框可见\r\nlet previewVisible = ref(false)\r\n\r\nonMounted(() => {\r\n  getTableData();\r\n})\r\n\r\n// 获取新闻数据\r\nconst getTableData = async () => {\r\n  const res = await axios.get(`//8.130.52.196:3000/adminapi/news/list`);\r\n  if (res.status !== 201) return ElMessage.error('获取新闻列表失败');\r\n  tableData.value = res.data.data\r\n}\r\n\r\n// 格式化分类数据\r\nconst categoryFormat = (category) => {\r\n  const Arr = ['最新发布', '典型案例', '通知公告'];\r\n  return Arr[category - 1];\r\n}\r\n\r\n// 发布关闭新闻\r\nconst hanldSwitchChange = async (data) => {\r\n  const res = await axios.put(`//8.130.52.196:3000/adminapi/news/publish/`, {\r\n    _id: data._id,\r\n    isPublish: data.isPublish\r\n  });\r\n  if (res.status !== 201) return ElMessage.error('修改失败');\r\n  ElMessage.success('修改成功')\r\n}\r\n\r\n// 监听预览事件\r\nconst hanldPreview = (data) => {\r\n  previewList.value = data;\r\n  previewVisible.value = true\r\n}\r\n\r\n// 删除新闻\r\nconst delNews = async (data) => {\r\n  ElMessageBox.confirm(\r\n    '是否删除?',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确认',\r\n      cancelButtonText: '否',\r\n      type: 'warning',\r\n    }\r\n  )\r\n    .then(async () => {\r\n      const res = await axios.delete(`//8.130.52.196:3000/adminapi/news/list/${data._id}`);\r\n      if (res.status !== 201) return ElMessage.error('删除失败');\r\n      ElMessage({\r\n        type: 'success',\r\n        message: '删除成功',\r\n      });\r\n      getTableData();\r\n    })\r\n    .catch(() => {\r\n      ElMessage({\r\n        type: 'info',\r\n        message: '已取消',\r\n      })\r\n    })\r\n\r\n}\r\n\r\n// 编辑新闻\r\nconst editNews = (data) => {\r\n  router.push(`/editnews/${data._id}`)\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/deep/.content {\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,SAASA,UAAU,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,UAAU,QAAQ,yBAAyB;AACpF,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,SAAS,QAAQ,YAAY;;;;IAEtC,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,MAAME,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB;IACA,MAAMO,WAAW,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B;IACA,IAAIQ,cAAc,GAAGR,GAAG,CAAC,KAAK,CAAC;IAE/BC,SAAS,CAAC,MAAM;MACdQ,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC;;IAEF;IACA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,wCAAuC,CAAC;MACrE,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC;MAC1DR,SAAS,CAACS,KAAK,GAAGL,GAAG,CAACM,IAAI,CAACA,IAAI;IACjC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAIC,QAAQ,IAAK;MACnC,MAAMC,GAAG,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;MACpC,OAAOA,GAAG,CAACD,QAAQ,GAAG,CAAC,CAAC;IAC1B,CAAC;;IAED;IACA,MAAME,iBAAiB,GAAG,MAAOJ,IAAI,IAAK;MACxC,MAAMN,GAAG,GAAG,MAAMR,KAAK,CAACmB,GAAG,CAAE,4CAA2C,EAAE;QACxEC,GAAG,EAAEN,IAAI,CAACM,GAAG;QACbC,SAAS,EAAEP,IAAI,CAACO;MAClB,CAAC,CAAC;MACF,IAAIb,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,MAAM,CAAC;MACtDD,SAAS,CAACW,OAAO,CAAC,MAAM,CAAC;IAC3B,CAAC;;IAED;IACA,MAAMC,YAAY,GAAIT,IAAI,IAAK;MAC7BT,WAAW,CAACQ,KAAK,GAAGC,IAAI;MACxBR,cAAc,CAACO,KAAK,GAAG,IAAI;IAC7B,CAAC;;IAED;IACA,MAAMW,OAAO,GAAG,MAAOV,IAAI,IAAK;MAC9BW,YAAY,CAACC,OAAO,CAClB,OAAO,EACP,IAAI,EACJ;QACEC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,GAAG;QACrBC,IAAI,EAAE;MACR,CACF,CAAC,CACEC,IAAI,CAAC,YAAY;QAChB,MAAMtB,GAAG,GAAG,MAAMR,KAAK,CAAC+B,MAAM,CAAE,0CAAyCjB,IAAI,CAACM,GAAI,EAAC,CAAC;QACpF,IAAIZ,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,MAAM,CAAC;QACtDD,SAAS,CAAC;UACRkB,IAAI,EAAE,SAAS;UACfG,OAAO,EAAE;QACX,CAAC,CAAC;QACFzB,YAAY,CAAC,CAAC;MAChB,CAAC,CAAC,CACD0B,KAAK,CAAC,MAAM;QACXtB,SAAS,CAAC;UACRkB,IAAI,EAAE,MAAM;UACZG,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IAEN,CAAC;;IAED;IACA,MAAME,QAAQ,GAAIpB,IAAI,IAAK;MACzBX,MAAM,CAACgC,IAAI,CAAE,aAAYrB,IAAI,CAACM,GAAI,EAAC,CAAC;IACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}