{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\86191\\Desktop\\admin\\src\\components\\editor\\Editor.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit\">\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport E from 'wangeditor'\r\nimport { onMounted, defineEmits, defineExpose, defineProps } from 'vue'\r\n\r\nconst emit = defineEmits(['event'])\r\nconst props = defineProps({\r\n  content: String\r\n})\r\n\r\nconst close = () => {\r\n  editor.txt.clear()\r\n}\r\n\r\ndefineExpose({ close })//暴露子组件的方法或者数据\r\n\r\nonMounted(() => {\r\n  const editor = new E('.edit');\r\n  editor.config.customUploadImg = function (resultFiles, insertImgFn) {\r\n    console.log(resultFiles);\r\n    // resultFiles 是 input 中选中的文件列表\r\n    // insertImgFn 是获取图片 url 后，插入到编辑器的方法\r\n\r\n    // 上传图片，返回结果，将图片插入到编辑器中\r\n    // insertImgFn(imgUrl)\r\n  }\r\n  editor.create();\r\n\r\n  // 初始化数据\r\n  props.content && editor.txt.html(props.content)\r\n  // 配置 onchange 回调函数\r\n  editor.config.onchange = function (newHtml) {\r\n    emit('event', newHtml)\r\n\r\n  };\r\n})\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;uBAAjBC,mBAAA,CAEM,OAFNC,UAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}