{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"userlist\"\n};\nconst _hoisted_2 = {\n  class: \"bread\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 面包屑区域 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_breadcrumb, {\n    \"separator-icon\": _ctx.ArrowRight\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"用户管理\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"用户列表\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"separator-icon\"])]), _createCommentVNode(\" table表格区域 \"), _createElementVNode(\"div\", null, [_createVNode(_component_el_table, {\n    data: $setup.tableData,\n    border: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"username\",\n      label: \"用户名称\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"avatar\",\n      label: \"Name\"\n    }, {\n      default: _withCtx(scope => [_createCommentVNode(\" 判断是否有头像 \"), _ctx.scpoe.row.avatar ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_avatar, {\n        size: 50,\n        src: 'http://localhost:3000' + _ctx.scpoe.row.avatar\n      }, null, 8 /* PROPS */, [\"src\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4))]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_el_breadcrumb","_ctx","ArrowRight","_component_el_breadcrumb_item","_component_el_table","data","$setup","tableData","border","style","_component_el_table_column","prop","label","default","_withCtx","scope","scpoe","row","avatar","_hoisted_3","_component_el_avatar","size","src","_hoisted_4"],"sources":["D:\\0\\综合练习\\全栈项目\\news\\前端\\后台\\admin\\src\\views\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"userlist\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- table表格区域 -->\r\n    <div>\r\n      <el-table :data=\"tableData\" border style=\"width: 100%\">\r\n        <el-table-column prop=\"username\" label=\"用户名称\" />\r\n        <el-table-column prop=\"avatar\" label=\"Name\">\r\n          <template #default=\"scope\">\r\n            <!-- 判断是否有头像 -->\r\n            <div v-if=\"scpoe.row.avatar\">\r\n              <el-avatar :size=\"50\" :src=\"'http://localhost:3000' + scpoe.row.avatar\"></el-avatar>\r\n            </div>\r\n            <div v-else></div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\n\r\n// table数据\r\nlet tableData = ref([]);\r\n\r\nconst getTableList = async () => {\r\n  const res = await axios.get('adminapi/user/list');\r\n  if (res.status !== 201) return ElMessage.error('获取用户列表失败');\r\n  console.log(res.data.data);\r\n  tableData = res.data.data\r\n}\r\n\r\nonMounted(() => {\r\n  getTableList();\r\n})\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EAEdA,KAAK,EAAC;AAAO;;;;;;;;;;;;;uBAFpBC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,mBAAA,WAAc,EACdC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAGgBC,wBAAA;IAHA,gBAAc,EAAEC,IAAA,CAAAC;EAAU;sBACxC,MAA6C,CAA7CH,YAAA,CAA6CI,6BAAA;wBAAzB,MAAI,C,iBAAJ,MAAI,E;;QACxBJ,YAAA,CAA6CI,6BAAA;wBAAzB,MAAI,C,iBAAJ,MAAI,E;;;;;2CAI5BP,mBAAA,eAAkB,EAClBC,mBAAA,CAaM,cAZJE,YAAA,CAWWK,mBAAA;IAXAC,IAAI,EAAEC,MAAA,CAAAC,SAAS;IAAEC,MAAM,EAAN,EAAM;IAACC,KAAmB,EAAnB;MAAA;IAAA;;sBACjC,MAAgD,CAAhDV,YAAA,CAAgDW,0BAAA;MAA/BC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAC;QACvCb,YAAA,CAQkBW,0BAAA;MARDC,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC;;MACxBC,OAAO,EAAAC,QAAA,CAAEC,KAAK,KACvBnB,mBAAA,aAAgB,EACLK,IAAA,CAAAe,KAAK,CAACC,GAAG,CAACC,MAAM,I,cAA3BxB,mBAAA,CAEM,OAAAyB,UAAA,GADJpB,YAAA,CAAoFqB,oBAAA;QAAxEC,IAAI,EAAE,EAAE;QAAGC,GAAG,4BAA4BrB,IAAA,CAAAe,KAAK,CAACC,GAAG,CAACC;2DAElExB,mBAAA,CAAkB,OAAA6B,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}