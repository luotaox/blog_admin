{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { unref as _unref, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ef409e30\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"edit_essay\"\n};\nconst _hoisted_2 = {\n  class: \"bread\"\n};\nconst _hoisted_3 = {\n  class: \"form\",\n  style: {\n    \"margin-top\": \"2em\"\n  }\n};\nimport { ArrowRight } from '@element-plus/icons-vue';\nimport { ref, reactive, onMounted } from 'vue';\nimport Edit from '@/components/editor/Editor.vue';\nimport { ElMessage } from 'element-plus';\n// 图片上传封装组件\nimport Upload from '@/components/upload/Upload.vue';\n// 图片上传封装方法\nimport upload from '@/http/service/upload.js';\nimport axios from 'axios';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  __name: 'EditEssay',\n  setup(__props) {\n    const route = useRoute();\n    const router = useRouter();\n    const essayAddRef = ref();\n    let options = ref([]);\n    // 表单对象\n    const essayAddForm = reactive({\n      title: '',\n      content: '',\n      category: '',\n      summary: '',\n      cover: '',\n      file: ''\n    });\n    const getOptions = async () => {\n      const res = await axios.get('/adminapi/category/list');\n      if (res.status !== 201) return ElMessage.error('获取列表失败');\n      options.value = res.data.data;\n    };\n\n    // 富文本编辑框处理事件\n    const handleChange = data => {\n      if (data) return essayAddForm.content = data;\n    };\n\n    // 表单验证规则\n    const essayAddRules = reactive({\n      title: [{\n        required: true,\n        message: '请输入标题',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        message: '不能少于两个字符',\n        trigger: 'blur'\n      }],\n      summary: [{\n        required: true,\n        message: '请输入简要',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: '请选择类别'\n      }]\n    });\n\n    // 图片上传change事件\n    const uploadImg = file => {\n      // 对图片进行处理\n      essayAddForm.cover = URL.createObjectURL(file);\n      essayAddForm.file = file;\n    };\n\n    // 监听提交事件\n    const submitFrom = async () => {\n      essayAddRef.value.validate(async valid => {\n        if (!valid) return ElMessage.error('请填写必要表单项');\n        const res = await upload(`/adminapi/essay/list/${route.params.id}`, essayAddForm);\n        if (res.status !== 201) return ElMessage.error('更新失败');\n        ElMessage.success('更新成功');\n        essayAddForm.file = '';\n        router.push('/essay/list');\n      });\n    };\n    onMounted(async () => {\n      getOptions();\n      const res = await axios.get(`/adminapi/essay/list/${route.params.id}`);\n      if (res.status !== 201) return ElMessage.error('获取失败');\n      Object.assign(essayAddForm, res.data.data[0]);\n    });\n    return (_ctx, _cache) => {\n      const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n      const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n      const _component_el_option = _resolveComponent(\"el-option\");\n      const _component_el_select = _resolveComponent(\"el-select\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_form = _resolveComponent(\"el-form\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_breadcrumb, {\n        \"separator-icon\": _unref(ArrowRight)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, null, {\n          default: _withCtx(() => [_createTextVNode(\"文章管理\")]),\n          _: 1\n        }), _createVNode(_component_el_breadcrumb_item, {\n          to: \"/essay\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"写文章\")]),\n          _: 1\n        }), _createVNode(_component_el_breadcrumb_item, null, {\n          default: _withCtx(() => [_createTextVNode(\"编辑文章\")]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"separator-icon\"])]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n        ref_key: \"essayAddRef\",\n        ref: essayAddRef,\n        model: essayAddForm,\n        rules: essayAddRules,\n        \"label-width\": \"120px\",\n        \"status-icon\": \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"标题\",\n          prop: \"title\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: essayAddForm.title,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => essayAddForm.title = $event)\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          label: \"简要\",\n          prop: \"summary\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: essayAddForm.summary,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => essayAddForm.summary = $event),\n            rows: 3,\n            type: \"textarea\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          label: \"内容\",\n          prop: \"content\"\n        }, {\n          default: _withCtx(() => [essayAddForm.content ? (_openBlock(), _createBlock(Edit, {\n            key: 0,\n            onEvent: handleChange,\n            content: essayAddForm.content\n          }, null, 8, [\"content\"])) : _createCommentVNode(\"\", true)]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          label: \"类别\",\n          prop: \"category\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_select, {\n            modelValue: essayAddForm.category,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => essayAddForm.category = $event),\n            style: {\n              \"width\": \"100%\"\n            },\n            placeholder: \"请选择类别\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(options), item => {\n              return _openBlock(), _createBlock(_component_el_option, {\n                key: item._id,\n                label: item.title,\n                value: item.href\n              }, null, 8, [\"label\", \"value\"]);\n            }), 128))]),\n            _: 1\n          }, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          label: \"封面\",\n          prop: \"cover\"\n        }, {\n          default: _withCtx(() => [_createVNode(Upload, {\n            avatar: essayAddForm.cover,\n            onAvatarChange: uploadImg\n          }, null, 8, [\"avatar\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            onClick: submitFrom,\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"更新文章\")]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"model\", \"rules\"])])]);\n    };\n  }\n};","map":{"version":3,"names":["ArrowRight","ref","reactive","onMounted","Edit","ElMessage","Upload","upload","axios","useRoute","useRouter","route","router","essayAddRef","options","essayAddForm","title","content","category","summary","cover","file","getOptions","res","get","status","error","value","data","handleChange","essayAddRules","required","message","trigger","min","uploadImg","URL","createObjectURL","submitFrom","validate","valid","params","id","success","push","Object","assign"],"sources":["C:/Users/86191/Desktop/admin/src/views/essay/EditEssay.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit_essay\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>文章管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item to=\"/essay\">写文章</el-breadcrumb-item>\r\n        <el-breadcrumb-item>编辑文章</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- 表单区域 -->\r\n    <div class=\"form\" style=\"margin-top: 2em;\">\r\n      <el-form ref=\"essayAddRef\" :model=\"essayAddForm\" :rules=\"essayAddRules\" label-width=\"120px\" status-icon>\r\n        <!-- 标题 -->\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"essayAddForm.title\" />\r\n        </el-form-item>\r\n        <!-- 简要 -->\r\n        <el-form-item label=\"简要\" prop=\"summary\">\r\n          <el-input v-model=\"essayAddForm.summary\" :rows=\"3\" type=\"textarea\" />\r\n        </el-form-item>\r\n        <!-- 富文本编辑框 -->\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <Edit @event=\"handleChange\" :content=\"essayAddForm.content\" v-if=\"essayAddForm.content\" />\r\n        </el-form-item>\r\n        <!-- 类别 -->\r\n        <el-form-item label=\"类别\" prop=\"category\">\r\n          <el-select v-model=\"essayAddForm.category\" style=\"width: 100%;\" placeholder=\"请选择类别\">\r\n            <el-option v-for=\"item in options\" :key=\"item._id\" :label=\"item.title\" :value=\"item.href\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 封面 -->\r\n        <el-form-item label=\"封面\" prop=\"cover\">\r\n          <Upload :avatar=\"essayAddForm.cover\" @avatarChange=\"uploadImg\" />\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item>\r\n          <el-button @click=\"submitFrom\" type=\"primary\">更新文章</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ArrowRight } from '@element-plus/icons-vue'\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport Edit from '@/components/editor/Editor.vue'\r\nimport { ElMessage } from 'element-plus'\r\n// 图片上传封装组件\r\nimport Upload from '@/components/upload/Upload.vue'\r\n// 图片上传封装方法\r\nimport upload from '@/http/service/upload.js'\r\nimport axios from 'axios'\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst essayAddRef = ref();\r\nlet options = ref([]);\r\n// 表单对象\r\nconst essayAddForm = reactive({\r\n  title: '',\r\n  content: '',\r\n  category: '',\r\n  summary: '',\r\n  cover: '',\r\n  file: ''\r\n})\r\n\r\nconst getOptions = async () => {\r\n  const res = await axios.get('/adminapi/category/list');\r\n  if (res.status !== 201) return ElMessage.error('获取列表失败');\r\n  options.value = res.data.data;\r\n}\r\n\r\n// 富文本编辑框处理事件\r\nconst handleChange = (data) => {\r\n  if (data) return essayAddForm.content = data;\r\n}\r\n\r\n\r\n// 表单验证规则\r\nconst essayAddRules = reactive({\r\n  title: [\r\n    {\r\n      required: true,\r\n      message: '请输入标题',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 2,\r\n      message: '不能少于两个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  summary: [\r\n    {\r\n      required: true,\r\n      message: '请输入简要',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  category: [\r\n    {\r\n      required: true,\r\n      message: '请选择类别'\r\n    }\r\n  ]\r\n})\r\n\r\n// 图片上传change事件\r\nconst uploadImg = (file) => {\r\n  // 对图片进行处理\r\n  essayAddForm.cover = URL.createObjectURL(file)\r\n  essayAddForm.file = file\r\n}\r\n\r\n\r\n// 监听提交事件\r\nconst submitFrom = async () => {\r\n  essayAddRef.value.validate(async (valid) => {\r\n    if (!valid) return ElMessage.error('请填写必要表单项');\r\n    const res = await upload(`/adminapi/essay/list/${route.params.id}`, essayAddForm);\r\n    if (res.status !== 201) return ElMessage.error('更新失败');\r\n    ElMessage.success('更新成功');\r\n    essayAddForm.file = '';\r\n    router.push('/essay/list');\r\n  })\r\n}\r\n\r\nonMounted(async () => {\r\n  getOptions();\r\n  const res = await axios.get(`/adminapi/essay/list/${route.params.id}`);\r\n  if (res.status !== 201) return ElMessage.error('获取失败');\r\n  Object.assign(essayAddForm, res.data.data[0])\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.form {\r\n  width: 55em;\r\n}\r\n\r\n\r\n// 封面上传样式\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #3d392a;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n/deep/.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #2561af;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n/deep/.avatar-uploader .avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}