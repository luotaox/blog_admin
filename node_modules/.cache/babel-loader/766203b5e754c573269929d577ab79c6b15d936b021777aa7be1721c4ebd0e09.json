{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport { ArrowRight } from '@element-plus/icons-vue';\nimport { ref, reactive } from 'vue';\n// 图片上传封装组件\nimport Upload from '@/components/upload/Upload.vue';\n// 图片上传封装方法\nimport upload from '@/http/service/upload.js';\n\n// 表单对象\n\nexport default {\n  __name: 'UserAdd',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userAddForm = reactive({\n      username: '',\n      password: '',\n      role: 2,\n      introduction: '',\n      avatar: '',\n      file: null,\n      gender: 0 //保密\n    });\n\n    const UserAddRef = ref();\n    // 表单验证规则\n    const UserAddRules = reactive({\n      username: [{\n        required: true,\n        message: '用户名不能为空',\n        trigger: 'blur'\n      }, {\n        trigger: 'blur',\n        validator: distinct\n      }],\n      password: [{\n        required: true,\n        message: '密码不能为空',\n        trigger: 'blur'\n      }, {\n        min: 5,\n        message: '密码不能少于5个字符',\n        trigger: 'blur'\n      }],\n      introduction: [{\n        required: true,\n        message: '简介不能为空',\n        trigger: 'blur'\n      }],\n      avatar: [{\n        required: true,\n        message: '头像不能为空',\n        trigger: 'blur'\n      }]\n    });\n\n    // 权限管理\n    const options = [{\n      label: '编辑',\n      value: 2\n    }, {\n      label: '管理员',\n      value: 1\n    }];\n\n    // 图片上传change事件\n    const handleChange = file => {\n      // 对图片进行处理\n      userAddForm.avatar = URL.createObjectURL(file);\n      userAddForm.file = file;\n    };\n\n    // 点击提交事件\n    const submitFrom = () => {\n      UserAddRef.value.validate(async valid => {\n        if (!valid) return ElMessage.error('请填写必要表单项');\n        const res = await upload('adminapi/user/add', userAddForm);\n        if (res.status !== 201) return ElMessage.error('添加失败');\n        // 重置\n        UserAddRef.value.resetFields();\n        ElMessage.success('添加成功');\n      });\n    };\n\n    // var distinct = async (rule, value, callback) => {\n    //   // const { data: res } = await axios.post('adminapi/user/distinct', {\n    //   //   username: userAddForm.username\n    //   // });\n    //   // if(res.distinct === 0)\n    //   console.log(123);\n    //   console.log(rule);\n    //   console.log(value);\n    //   console.log(callback);\n    // }\n    const distinct = (rule, value, callback) => {\n      console.log(rule);\n    };\n    const __returned__ = {\n      userAddForm,\n      UserAddRef,\n      UserAddRules,\n      options,\n      handleChange,\n      submitFrom,\n      distinct,\n      get axios() {\n        return axios;\n      },\n      get ArrowRight() {\n        return ArrowRight;\n      },\n      ref,\n      reactive,\n      Upload,\n      get upload() {\n        return upload;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","ArrowRight","ref","reactive","Upload","upload","userAddForm","username","password","role","introduction","avatar","file","gender","UserAddRef","UserAddRules","required","message","trigger","validator","distinct","min","options","label","value","handleChange","URL","createObjectURL","submitFrom","validate","valid","ElMessage","error","res","status","resetFields","success","rule","callback","console","log"],"sources":["D:/0/综合练习/全栈项目/news/前端/后台/admin/src/views/user/UserAdd.vue"],"sourcesContent":["<template>\r\n  <div class=\"userAdd\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>添加用户</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- 表单区域 -->\r\n    <div class=\"user-add-form\" style=\"margin-top: 2em;\">\r\n      <el-form ref=\"UserAddRef\" :model=\"userAddForm\" :rules=\"UserAddRules\" label-width=\"120px\" status-icon>\r\n        <!-- 用户名 -->\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"userAddForm.username\" />\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"userAddForm.password\" show-password />\r\n        </el-form-item>\r\n        <!-- 权限 -->\r\n        <el-form-item label=\"权限\" prop=\"password\">\r\n          <el-select v-model=\"userAddForm.role\" style=\"width: 100%;\" placeholder=\"请选择权限\">\r\n            <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 个人简介 -->\r\n        <el-form-item label=\"个人简介\" prop=\"introduction\">\r\n          <el-input v-model=\"userAddForm.introduction\" type=\"textarea\" placeholder=\"介绍一下自己哦 ~\" :rows=\"3\" />\r\n        </el-form-item>\r\n        <!-- 头像上传 -->\r\n        <el-form-item label=\"头像上传\" prop=\"avatar\">\r\n          <Upload :avatar=\"userAddForm.avatar\" @avatarChange=\"handleChange\" />\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item>\r\n          <el-button @click=\"submitFrom\" type=\"primary\">添加用户</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios'\r\nimport { ArrowRight } from '@element-plus/icons-vue'\r\nimport { ref, reactive } from 'vue'\r\n// 图片上传封装组件\r\nimport Upload from '@/components/upload/Upload.vue'\r\n// 图片上传封装方法\r\nimport upload from '@/http/service/upload.js'\r\n\r\n// 表单对象\r\nconst userAddForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  role: 2,\r\n  introduction: '',\r\n  avatar: '',\r\n  file: null,\r\n  gender: 0//保密\r\n})\r\n\r\nconst UserAddRef = ref();\r\n// 表单验证规则\r\nconst UserAddRules = reactive({\r\n  username: [\r\n    {\r\n      required: true,\r\n      message: '用户名不能为空',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      trigger: 'blur',\r\n      validator: distinct,\r\n    }\r\n  ],\r\n  password: [\r\n    {\r\n      required: true,\r\n      message: '密码不能为空',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 5,\r\n      message: '密码不能少于5个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  introduction: [\r\n    {\r\n      required: true,\r\n      message: '简介不能为空',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  avatar: [\r\n    {\r\n      required: true,\r\n      message: '头像不能为空',\r\n      trigger: 'blur'\r\n    }\r\n  ]\r\n})\r\n\r\n// 权限管理\r\nconst options = [\r\n  {\r\n    label: '编辑',\r\n    value: 2\r\n  },\r\n  {\r\n    label: '管理员',\r\n    value: 1\r\n  }\r\n]\r\n\r\n// 图片上传change事件\r\nconst handleChange = (file) => {\r\n  // 对图片进行处理\r\n  userAddForm.avatar = URL.createObjectURL(file)\r\n  userAddForm.file = file\r\n}\r\n\r\n// 点击提交事件\r\nconst submitFrom = () => {\r\n  UserAddRef.value.validate(async (valid) => {\r\n    if (!valid) return ElMessage.error('请填写必要表单项');\r\n    const res = await upload('adminapi/user/add', userAddForm);\r\n    if (res.status !== 201) return ElMessage.error('添加失败');\r\n    // 重置\r\n    UserAddRef.value.resetFields();\r\n    ElMessage.success('添加成功')\r\n  })\r\n}\r\n\r\n// var distinct = async (rule, value, callback) => {\r\n//   // const { data: res } = await axios.post('adminapi/user/distinct', {\r\n//   //   username: userAddForm.username\r\n//   // });\r\n//   // if(res.distinct === 0)\r\n//   console.log(123);\r\n//   console.log(rule);\r\n//   console.log(value);\r\n//   console.log(callback);\r\n// }\r\nconst distinct = (rule, value, callback) => {\r\n  console.log(rule);\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.userAdd {\r\n  .user-add-form {\r\n    width: 55em;\r\n  }\r\n}\r\n\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #3d392a;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n/deep/.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #2561af;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n/deep/.avatar-uploader .avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":";AA6CA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC;AACA,OAAOC,MAAM,MAAM,gCAAgC;AACnD;AACA,OAAOC,MAAM,MAAM,0BAA0B;;AAE7C;;;;;;;;IACA,MAAMC,WAAW,GAAGH,QAAQ,CAAC;MAC3BI,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,CAAC;MACPC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;;IAEF,MAAMC,UAAU,GAAGZ,GAAG,CAAC,CAAC;IACxB;IACA,MAAMa,YAAY,GAAGZ,QAAQ,CAAC;MAC5BI,QAAQ,EAAE,CACR;QACES,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,SAAS;QAClBC,OAAO,EAAE;MACX,CAAC,EACD;QACEA,OAAO,EAAE,MAAM;QACfC,SAAS,EAAEC;MACb,CAAC,CACF;MACDZ,QAAQ,EAAE,CACR;QACEQ,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,QAAQ;QACjBC,OAAO,EAAE;MACX,CAAC,EACD;QACEG,GAAG,EAAE,CAAC;QACNJ,OAAO,EAAE,YAAY;QACrBC,OAAO,EAAE;MACX,CAAC,CACF;MACDR,YAAY,EAAE,CACZ;QACEM,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,QAAQ;QACjBC,OAAO,EAAE;MACX,CAAC,CACF;MACDP,MAAM,EAAE,CACN;QACEK,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,QAAQ;QACjBC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC,CAAC;;IAEF;IACA,MAAMI,OAAO,GAAG,CACd;MACEC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE;IACT,CAAC,EACD;MACED,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE;IACT,CAAC,CACF;;IAED;IACA,MAAMC,YAAY,GAAIb,IAAI,IAAK;MAC7B;MACAN,WAAW,CAACK,MAAM,GAAGe,GAAG,CAACC,eAAe,CAACf,IAAI,CAAC;MAC9CN,WAAW,CAACM,IAAI,GAAGA,IAAI;IACzB,CAAC;;IAED;IACA,MAAMgB,UAAU,GAAGA,CAAA,KAAM;MACvBd,UAAU,CAACU,KAAK,CAACK,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACzC,IAAI,CAACA,KAAK,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC;QAC9C,MAAMC,GAAG,GAAG,MAAM5B,MAAM,CAAC,mBAAmB,EAAEC,WAAW,CAAC;QAC1D,IAAI2B,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE,OAAOH,SAAS,CAACC,KAAK,CAAC,MAAM,CAAC;QACtD;QACAlB,UAAU,CAACU,KAAK,CAACW,WAAW,CAAC,CAAC;QAC9BJ,SAAS,CAACK,OAAO,CAAC,MAAM,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMhB,QAAQ,GAAGA,CAACiB,IAAI,EAAEb,KAAK,EAAEc,QAAQ,KAAK;MAC1CC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}