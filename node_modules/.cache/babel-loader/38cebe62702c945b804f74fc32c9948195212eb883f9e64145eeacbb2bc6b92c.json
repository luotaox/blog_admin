{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\86191\\Desktop\\admin\\src\\components\\editor\\Editor.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit\">\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport E from 'wangeditor'\r\nimport { onMounted, defineEmits, defineExpose, defineProps, reactive } from 'vue'\r\nimport axios from 'axios'\r\nimport upload from '@/http/service/upload.js'\r\nimport { ElMessage } from 'element-plus';\r\nconst emit = defineEmits(['event'])\r\nconst props = defineProps({\r\n  content: String\r\n})\r\n\r\nconst close = () => {\r\n  editor.txt.clear()\r\n}\r\n\r\ndefineExpose({ close })//暴露子组件的方法或者数据\r\n\r\nconst uploadImg = async () => {\r\n  const res = await upload('/adminapi/essay/img', uploadForm);\r\n  if (res.status !== 201) return ElMessage.error('上传失败');\r\n  console.log(res.data.data.img);\r\n  return res.data.data.img;\r\n}\r\n\r\nlet uploadForm = reactive({\r\n  file: '',\r\n  img: ''\r\n})\r\n\r\nonMounted(() => {\r\n  const editor = new E('.edit');\r\n  editor.config.customUploadImg = function (resultFiles, insertImgFn) {\r\n    let img = window.URL.createObjectURL(new Blob(resultFiles));\r\n    uploadForm.img = img;\r\n    uploadForm.file = resultFiles[0];\r\n    let url = uploadImg();\r\n    console.log(url);\r\n    let imgUrl = `http://localhost:3000/${uploadImg()}`\r\n    // // 上传图片，返回结果，将图片插入到编辑器中\r\n    // insertImgFn(imgUrl)\r\n  }\r\n  editor.create();\r\n\r\n  // 初始化数据\r\n  props.content && editor.txt.html(props.content)\r\n  // 配置 onchange 回调函数\r\n  editor.config.onchange = function (newHtml) {\r\n    emit('event', newHtml)\r\n\r\n  };\r\n})\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;uBAAjBC,mBAAA,CAEM,OAFNC,UAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}