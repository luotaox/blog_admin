{"ast":null,"code":"import { ref, onMounted, reactive } from 'vue';\nimport axios from 'axios';\nimport { ArrowRight } from '@element-plus/icons-vue';\n// table数据\n\nexport default {\n  __name: 'UserList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let tableData = ref([]);\n\n    // dislog对话框显示与否\n    let editUserVisible = ref(false);\n\n    // 获取用户列表\n    const getTableList = async () => {\n      const res = await axios.get('adminapi/user/list');\n      if (res.status !== 201) return ElMessage.error('获取用户列表失败');\n      tableData.value = res.data.data;\n    };\n\n    // 用户表单\n    const editForm = reactive({\n      username: '',\n      password: '',\n      rol: 1,\n      introduction: ''\n    });\n\n    // 编辑用户\n    const userEdit = data => {\n      console.log(data);\n      editUserVisible.value = true;\n      editForm = {\n        username,\n        password,\n        rol,\n        introduction\n      };\n    };\n\n    // 权限管理权限\n    const options = [{\n      label: '编辑',\n      value: 2\n    }, {\n      label: '管理员',\n      value: 1\n    }];\n\n    // 删除用户\n    const userDelete = data => {\n      ElMessageBox.confirm('是否删除?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '否',\n        type: 'warning'\n      }).then(async () => {\n        const res = await axios.delete(`adminapi/user/list/${data._id}`);\n        if (res.status !== 201) return ElMessage.error('删除失败');\n        ElMessage({\n          type: 'success',\n          message: '删除成功'\n        });\n        getTableList();\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    };\n    onMounted(() => {\n      getTableList();\n    });\n    const __returned__ = {\n      get tableData() {\n        return tableData;\n      },\n      set tableData(v) {\n        tableData = v;\n      },\n      get editUserVisible() {\n        return editUserVisible;\n      },\n      set editUserVisible(v) {\n        editUserVisible = v;\n      },\n      getTableList,\n      editForm,\n      userEdit,\n      options,\n      userDelete,\n      ref,\n      onMounted,\n      reactive,\n      get axios() {\n        return axios;\n      },\n      get ArrowRight() {\n        return ArrowRight;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","axios","ArrowRight","tableData","editUserVisible","getTableList","res","get","status","ElMessage","error","value","data","editForm","username","password","rol","introduction","userEdit","console","log","options","label","userDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","delete","_id","message","catch"],"sources":["D:/0/综合练习/全栈项目/news/前端/后台/admin/src/views/user/UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"userlist\">\r\n    <!-- 面包屑区域 -->\r\n    <div class=\"bread\">\r\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n        <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n    <!-- table表格区域 -->\r\n    <div style=\"margin-top: 2em;\">\r\n      <el-card>\r\n        <el-table :data=\"tableData\" border>\r\n          <!-- 名称 -->\r\n          <el-table-column prop=\"username\" label=\"用户名称\" />\r\n          <!-- 头像 -->\r\n          <el-table-column prop=\"avatar\" label=\"头像\">\r\n            <template #default=\"scope\">\r\n              <!-- 判断是否有头像 -->\r\n              <div v-if=\"scope.row.avatar\">\r\n                <el-avatar :size=\"50\" :src=\"'http://localhost:3000' + scope.row.avatar\"></el-avatar>\r\n              </div>\r\n              <div v-else>\r\n                <el-avatar :size=\"50\" src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\" />\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 权限 -->\r\n          <el-table-column prop=\"role\" label=\"权限\">\r\n            <template #default=\"scope\">\r\n              <el-tag class=\"ml-2\" type=\"danger\" v-if=\"scope.row.role == 1\"> 管理员</el-tag>\r\n              <el-tag class=\"ml-2\" type=\"success\" v-else>编辑</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 操作 -->\r\n          <el-table-column label=\"操作\">\r\n            <template #default=\"scope\">\r\n              <el-button size=\"small\" type=\"success\" @click=\"userEdit(scope.row)\">编辑</el-button>\r\n              <el-button size=\"small\" type=\"danger\" @click=\"userDelete(scope.row)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- dialog对话框区域 -->\r\n    <div class=\"dialog\">\r\n      <el-dialog v-model=\"editUserVisible\" title=\"编辑用户\">\r\n        <el-form :model=\"editForm\">\r\n          <!-- 用户名 -->\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input v-model=\"editForm.username\" autocomplete=\"off\" />\r\n          </el-form-item>\r\n          <!-- 密码 -->\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <input type=\"text\" v-model=\"editForm.password\" />\r\n          </el-form-item>\r\n          <!-- 权限 -->\r\n          <el-form-item label=\"角色\" prop=\"rol\">\r\n            <el-select v-model=\"editForm.rol\" placeholder=\"请选择角色\">\r\n              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <!-- 个人简介 -->\r\n          <el-form-item label=\"个人简介\" prop=\"introduction\">\r\n            <el-input v-model=\"userAddForm.introduction\" type=\"textarea\" placeholder=\"介绍一下自己哦 ~\" :rows=\"3\" />\r\n          </el-form-item>\r\n        </el-form>\r\n        <template #footer>\r\n          <span>\r\n            <el-button @click=\"editUserVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"editUserVisible = false\">\r\n              确认修改\r\n            </el-button>\r\n          </span>\r\n        </template>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport axios from 'axios'\r\nimport { ArrowRight } from '@element-plus/icons-vue'\r\n// table数据\r\nlet tableData = ref([]);\r\n\r\n// dislog对话框显示与否\r\nlet editUserVisible = ref(false)\r\n\r\n// 获取用户列表\r\nconst getTableList = async () => {\r\n  const res = await axios.get('adminapi/user/list');\r\n  if (res.status !== 201) return ElMessage.error('获取用户列表失败');\r\n  tableData.value = res.data.data;\r\n}\r\n\r\n// 用户表单\r\nconst editForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  rol: 1,\r\n  introduction: ''\r\n})\r\n\r\n// 编辑用户\r\nconst userEdit = (data) => {\r\n  console.log(data);\r\n  editUserVisible.value = true;\r\n  editForm = { username, password, rol, introduction }\r\n}\r\n\r\n// 权限管理权限\r\nconst options = [\r\n  {\r\n    label: '编辑',\r\n    value: 2\r\n  },\r\n  {\r\n    label: '管理员',\r\n    value: 1\r\n  }\r\n]\r\n\r\n// 删除用户\r\nconst userDelete = (data) => {\r\n  ElMessageBox.confirm(\r\n    '是否删除?',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确认',\r\n      cancelButtonText: '否',\r\n      type: 'warning',\r\n    }\r\n  )\r\n    .then(async () => {\r\n      const res = await axios.delete(`adminapi/user/list/${data._id}`);\r\n      if (res.status !== 201) return ElMessage.error('删除失败');\r\n      ElMessage({\r\n        type: 'success',\r\n        message: '删除成功',\r\n      });\r\n      getTableList();\r\n    })\r\n    .catch(() => {\r\n      ElMessage({\r\n        type: 'info',\r\n        message: '已取消',\r\n      })\r\n    })\r\n}\r\nonMounted(() => {\r\n  getTableList();\r\n})\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>"],"mappings":"AAmFA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,yBAAyB;AACpD;;;;;;;;IACA,IAAIC,SAAS,GAAGL,GAAG,CAAC,EAAE,CAAC;;IAEvB;IACA,IAAIM,eAAe,GAAGN,GAAG,CAAC,KAAK,CAAC;;IAEhC;IACA,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,oBAAoB,CAAC;MACjD,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC;MAC1DP,SAAS,CAACQ,KAAK,GAAGL,GAAG,CAACM,IAAI,CAACA,IAAI;IACjC,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAGb,QAAQ,CAAC;MACxBc,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,CAAC;MACNC,YAAY,EAAE;IAChB,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAIN,IAAI,IAAK;MACzBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjBR,eAAe,CAACO,KAAK,GAAG,IAAI;MAC5BE,QAAQ,GAAG;QAAEC,QAAQ;QAAEC,QAAQ;QAAEC,GAAG;QAAEC;MAAa,CAAC;IACtD,CAAC;;IAED;IACA,MAAMI,OAAO,GAAG,CACd;MACEC,KAAK,EAAE,IAAI;MACXX,KAAK,EAAE;IACT,CAAC,EACD;MACEW,KAAK,EAAE,KAAK;MACZX,KAAK,EAAE;IACT,CAAC,CACF;;IAED;IACA,MAAMY,UAAU,GAAIX,IAAI,IAAK;MAC3BY,YAAY,CAACC,OAAO,CAClB,OAAO,EACP,IAAI,EACJ;QACEC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,GAAG;QACrBC,IAAI,EAAE;MACR,CACF,CAAC,CACEC,IAAI,CAAC,YAAY;QAChB,MAAMvB,GAAG,GAAG,MAAML,KAAK,CAAC6B,MAAM,CAAE,sBAAqBlB,IAAI,CAACmB,GAAI,EAAC,CAAC;QAChE,IAAIzB,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,MAAM,CAAC;QACtDD,SAAS,CAAC;UACRmB,IAAI,EAAE,SAAS;UACfI,OAAO,EAAE;QACX,CAAC,CAAC;QACF3B,YAAY,CAAC,CAAC;MAChB,CAAC,CAAC,CACD4B,KAAK,CAAC,MAAM;QACXxB,SAAS,CAAC;UACRmB,IAAI,EAAE,MAAM;UACZI,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACN,CAAC;IACDjC,SAAS,CAAC,MAAM;MACdM,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}