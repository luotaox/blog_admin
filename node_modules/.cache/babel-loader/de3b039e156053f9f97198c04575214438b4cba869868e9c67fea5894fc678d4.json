{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Lock, User } from '@element-plus/icons-vue';\nimport { reactive, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const store = useStore();\n    const loginForm = reactive({\n      username: 'admin',\n      password: '123456'\n    });\n    const loginFormRef = ref();\n    // 验证规则\n    const loginRules = reactive({\n      username: [{\n        trigger: 'blur',\n        message: '请输入用户名',\n        required: true\n      }, {\n        pattern: /^[A-Za-z0-9]+$/,\n        trigger: 'blur',\n        message: '用户名只能是数字或字母'\n      }],\n      password: [{\n        trigger: 'blur',\n        message: '请输入密码',\n        required: true\n      }]\n    });\n    // 登录\n    const login = () => {\n      // 效验表单\n      loginFormRef.value.validate(async valid => {\n        if (!valid) return ElMessage.error('请填写必要表单项');\n        const res = await axios.post('/adminapi/user/login', loginForm);\n        if (res.status !== 201) return ElMessage.error(\"账号或密码错误\");\n        // 存储userInfo\n        store.commit('changeUserInfo', res.data.data);\n        router.push('/home');\n        ElMessage.success('登录成功');\n        store.commit('changeRouter', false);\n      });\n    };\n    // 重置\n    const resetForm = () => {\n      loginFormRef.value.resetFields();\n    };\n    const __returned__ = {\n      router,\n      store,\n      loginForm,\n      loginFormRef,\n      loginRules,\n      login,\n      resetForm,\n      get Lock() {\n        return Lock;\n      },\n      get User() {\n        return User;\n      },\n      reactive,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Lock","User","reactive","ref","useRouter","axios","useStore","router","store","loginForm","username","password","loginFormRef","loginRules","trigger","message","required","pattern","login","value","validate","valid","ElMessage","error","res","post","status","commit","data","push","success","resetForm","resetFields"],"sources":["D:/0/综合练习/全栈项目/news/前端/后台/admin/src/components/login/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div class=\"formBox\">\r\n      <div class=\"text\">\r\n        <h2>新闻后台管理系统</h2>\r\n      </div>\r\n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginRules\" status-icon>\r\n        <el-form-item label=\"\" prop=\"username\">\r\n          <el-icon style=\"margin-left: -2em; padding-right: 1em;\">\r\n            <User />\r\n          </el-icon>\r\n          <el-input v-model=\"loginForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"\" prop=\"password\">\r\n          <el-icon style=\"margin-left: -2em; padding-right: 1em;\">\r\n            <Lock />\r\n          </el-icon>\r\n          <el-input type=\"password\" v-model=\"loginForm.password\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"login()\">\r\n            登录\r\n          </el-button>\r\n          <el-button @click=\"resetForm()\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { Lock, User } from '@element-plus/icons-vue'\r\nimport { reactive, ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\nimport { useStore } from 'vuex'\r\n\r\nconst router = useRouter();\r\nconst store = useStore();\r\nconst loginForm = reactive({\r\n  username: 'admin',\r\n  password: '123456'\r\n})\r\n\r\nconst loginFormRef = ref()\r\n// 验证规则\r\nconst loginRules = reactive({\r\n  username: [\r\n    {\r\n      trigger: 'blur',\r\n      message: '请输入用户名',\r\n      required: true\r\n    },\r\n    {\r\n      pattern: /^[A-Za-z0-9]+$/,\r\n      trigger: 'blur',\r\n      message: '用户名只能是数字或字母'\r\n    }\r\n  ],\r\n  password: [\r\n    {\r\n      trigger: 'blur',\r\n      message: '请输入密码',\r\n      required: true\r\n    }\r\n  ]\r\n})\r\n// 登录\r\nconst login = () => {\r\n  // 效验表单\r\n  loginFormRef.value.validate(async (valid) => {\r\n    if (!valid) return ElMessage.error('请填写必要表单项');\r\n    const res = await axios.post('/adminapi/user/login', loginForm);\r\n    if (res.status !== 201) return ElMessage.error(\"账号或密码错误\");\r\n    // 存储userInfo\r\n    store.commit('changeUserInfo', res.data.data);\r\n    router.push('/home');\r\n    ElMessage.success('登录成功');\r\n    store.commit('changeRouter', false);\r\n  });\r\n\r\n}\r\n// 重置\r\nconst resetForm = () => {\r\n  loginFormRef.value.resetFields()\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login {\r\n  height: 100vh;\r\n  background-image: linear-gradient(125deg, #38618a, #33a161, #4192c8, #a54439, #b467d5);\r\n  background-size: 400%;\r\n  animation: backs 8s infinite;\r\n}\r\n\r\n@keyframes backs {\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n}\r\n\r\n/deep/.el-input__suffix-inner {\r\n  color: #409eff;\r\n}\r\n\r\n.formBox {\r\n  width: 30%;\r\n  height: 40%;\r\n  margin: 0 auto;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  transform: translateY(50%);\r\n  border-radius: 18px;\r\n\r\n  .el-form-item {\r\n    padding: 0.2rem 4rem;\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n  }\r\n\r\n  .el-form {\r\n    transform: translateY(50%);\r\n\r\n    /deep/.el-input__wrapper {\r\n      background-color: rgba(0, 0, 0, 0);\r\n    }\r\n\r\n    /deep/.el-input__inner {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  .text {\r\n    text-align: center;\r\n    padding-top: 2em;\r\n\r\n    h2 {\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":";AA+BA,SAASA,IAAI,EAAEC,IAAI,QAAQ,yBAAyB;AACpD,SAASC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,SAAS,GAAGP,QAAQ,CAAC;MACzBQ,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGT,GAAG,CAAC,CAAC;IAC1B;IACA,MAAMU,UAAU,GAAGX,QAAQ,CAAC;MAC1BQ,QAAQ,EAAE,CACR;QACEI,OAAO,EAAE,MAAM;QACfC,OAAO,EAAE,QAAQ;QACjBC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEC,OAAO,EAAE,gBAAgB;QACzBH,OAAO,EAAE,MAAM;QACfC,OAAO,EAAE;MACX,CAAC,CACF;MACDJ,QAAQ,EAAE,CACR;QACEG,OAAO,EAAE,MAAM;QACfC,OAAO,EAAE,OAAO;QAChBC,QAAQ,EAAE;MACZ,CAAC;IAEL,CAAC,CAAC;IACF;IACA,MAAME,KAAK,GAAGA,CAAA,KAAM;MAClB;MACAN,YAAY,CAACO,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC3C,IAAI,CAACA,KAAK,EAAE,OAAOC,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC;QAC9C,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,sBAAsB,EAAEhB,SAAS,CAAC;QAC/D,IAAIe,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOJ,SAAS,CAACC,KAAK,CAAC,SAAS,CAAC;QACzD;QACAf,KAAK,CAACmB,MAAM,CAAC,gBAAgB,EAAEH,GAAG,CAACI,IAAI,CAACA,IAAI,CAAC;QAC7CrB,MAAM,CAACsB,IAAI,CAAC,OAAO,CAAC;QACpBP,SAAS,CAACQ,OAAO,CAAC,MAAM,CAAC;QACzBtB,KAAK,CAACmB,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC;MACrC,CAAC,CAAC;IAEJ,CAAC;IACD;IACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;MACtBnB,YAAY,CAACO,KAAK,CAACa,WAAW,CAAC,CAAC;IAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}